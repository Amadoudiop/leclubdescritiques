{"version":3,"sources":["../../../../../../vendor/friendsofsymfony/jsrouting-bundle/Resources/js/run_jsunit.js"],"names":["waitFor","testFx","onReady","timeOutMillis","maxtimeOutMillis","start","Date","getTime","condition","interval","setInterval","eval","console","log","phantom","exit","clearInterval","args","length","page","WebPage","onConsoleMessage","msg","open","status","evaluate","G_testRunner","isFinished","exitCode","isSuccess","address"],"mappings":";;AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,aAAlC,EAAiD;AAC7C,QAAIC,mBAAmBD,gBAAgBA,aAAhB,GAAgC,IAAvD;AAAA,QAA6D;AACzDE,YAAQ,IAAIC,IAAJ,GAAWC,OAAX,EADZ;AAAA,QAEIC,YAAY,KAFhB;AAAA,QAGIC,WAAWC,YAAY,YAAW;AAC9B,YAAM,IAAIJ,IAAJ,GAAWC,OAAX,KAAuBF,KAAvB,GAA+BD,gBAAhC,IAAqD,CAACI,SAA3D,EAAuE;AACnE;AACAA,wBAAa,OAAOP,MAAP,KAAmB,QAAnB,GAA8BU,KAAKV,MAAL,CAA9B,GAA6CA,QAA1D,CAFmE,CAEE;AACxE,SAHD,MAGO;AACH,gBAAG,CAACO,SAAJ,EAAe;AACX;AACAI,wBAAQC,GAAR,CAAY,qBAAZ;AACAC,wBAAQC,IAAR,CAAa,CAAb;AACH,aAJD,MAIO;AACH;AACAH,wBAAQC,GAAR,CAAY,8BAA8B,IAAIP,IAAJ,GAAWC,OAAX,KAAuBF,KAArD,IAA8D,KAA1E;AACA,uBAAOH,OAAP,KAAoB,QAApB,GAA+BS,KAAKT,OAAL,CAA/B,GAA+CA,SAA/C,CAHG,CAGuD;AAC1Dc,8BAAcP,QAAd,EAJG,CAIsB;AAC5B;AACJ;AACJ,KAhBU,EAgBR,GAhBQ,CAHf,CAD6C,CAoBhC;AAChB;;AAED,IAAIK,QAAQG,IAAR,CAAaC,MAAb,KAAwB,CAA5B,EAA+B;AAC3BN,YAAQC,GAAR,CAAY,2CAAZ;AACAC,YAAQC,IAAR;AACH,CAHD,MAGO;AACH,QAAII,OAAO,IAAIC,OAAJ,EAAX;;AAEAD,SAAKE,gBAAL,GAAwB,UAASC,GAAT,EAAc;AAClCV,gBAAQC,GAAR,CAAYS,GAAZ;AACH,KAFD;;AAIAH,SAAKI,IAAL,CAAUT,QAAQG,IAAR,CAAa,CAAb,CAAV,EAA2B,UAASO,MAAT,EAAiB;AACxC,YAAIA,WAAW,SAAf,EAA0B;AACtBxB,oBAAQ,YAAW;AACf,uBAAOmB,KAAKM,QAAL,CAAc,YAAW;AAC5B,2BAAOC,aAAaC,UAAb,EAAP;AACH,iBAFM,CAAP;AAGH,aAJD,EAIG,YAAW;AACV,oBAAIC,WAAWT,KAAKM,QAAL,CAAc,YAAW;AACpC,2BAAOC,aAAaG,SAAb,KAA2B,CAA3B,GAA+B,CAAtC;AACH,iBAFc,CAAf;AAGAf,wBAAQC,IAAR,CAAaa,QAAb;AACH,aATD;AAUH,SAXD,MAWO;AACHhB,oBAAQC,GAAR,CAAY,sCAAsCiB,OAAtC,GAAgD,GAA5D;AACAhB,oBAAQC,IAAR;AACH;AACJ,KAhBD;AAiBH","file":"run_jsunit.js","sourcesContent":["function waitFor(testFx, onReady, timeOutMillis) {\n    var maxtimeOutMillis = timeOutMillis ? timeOutMillis : 3001, //< Default Max Timout is 3s\n        start = new Date().getTime(),\n        condition = false,\n        interval = setInterval(function() {\n            if ( (new Date().getTime() - start < maxtimeOutMillis) && !condition ) {\n                // If not time-out yet and condition not yet fulfilled\n                condition = (typeof(testFx) === \"string\" ? eval(testFx) : testFx()); //< defensive code\n            } else {\n                if(!condition) {\n                    // If condition still not fulfilled (timeout but condition is 'false')\n                    console.log(\"'waitFor()' timeout\");\n                    phantom.exit(1);\n                } else {\n                    // Condition fulfilled (timeout and/or condition is 'true')\n                    console.log(\"'waitFor()' finished in \" + (new Date().getTime() - start) + \"ms.\");\n                    typeof(onReady) === \"string\" ? eval(onReady) : onReady(); //< Do what it's supposed to do once the condition is fulfilled\n                    clearInterval(interval); //< Stop this interval\n                }\n            }\n        }, 100); //< repeat check every 250ms\n}\n\nif (phantom.args.length === 0) {\n    console.log('Usage: phantomjs run_jsunit.js <filepath>');\n    phantom.exit();\n} else {\n    var page = new WebPage();\n\n    page.onConsoleMessage = function(msg) {\n        console.log(msg);\n    };\n\n    page.open(phantom.args[0], function(status) {\n        if (status === 'success') {\n            waitFor(function() {\n                return page.evaluate(function() {\n                    return G_testRunner.isFinished();\n                });\n            }, function() {\n                var exitCode = page.evaluate(function() {\n                    return G_testRunner.isSuccess() ? 0 : 1;\n                });\n                phantom.exit(exitCode);\n            });\n        } else {\n            console.log(\"phantomjs: Unable to load page. [\" + address + ']');\n            phantom.exit();\n        }\n    });\n}\n"]}