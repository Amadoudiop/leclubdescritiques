{"version":3,"sources":["../../../../../../vendor/friendsofsymfony/jsrouting-bundle/Resources/js/router.test.js"],"names":["goog","require","testGenerate","router","fos","Router","base_url","literal","tokens","defaults","requirements","hosttokens","assertEquals","generate","testGenerateWithParams","blog_post","slug","testGenerateUsesBaseUrl","homepage","testGenerateUsesSchemeRequirements","host","testGenerateUsesHost","scheme","testGenerateUsesHostWhenTheSameSchemeRequirementGiven","testGenerateUsesHostWhenAnotherSchemeRequirementGiven","testGenerateSupportsHostPlaceholders","subdomain","testGenerateSupportsHostPlaceholdersDefaults","testGenerateGeneratesRelativePathWhenTheSameHostGiven","testGenerateUsesAbsoluteUrl","testGenerateUsesAbsoluteUrlWhenSchemeRequirementGiven","testGenerateWithOptionalTrailingParam","posts","testGenerateQueryStringWithoutDefaults","page","extra","testAllowSlashes","id","testGenerateWithExtraParams","undefined","foo","bar","testGenerateWithExtraParamsDeep","baz","bob","testGenerateThrowsErrorWhenRequiredParameterWasNotGiven","fail","e","message","testGenerateThrowsErrorForNonExistentRoute","testGetBaseUrl","getBaseUrl","testGeti18n","prefix","en__RG__homepage","es__RG__homepage","_admin","setPrefix","testGetRoute","expected","assertObjectEquals","getRoute","testGetRoutes","blog","structs","Map","getRoutes","testGenerateWithNullValue"],"mappings":"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","file":"router.test.js","sourcesContent":["goog.require('goog.testing.jsunit');\n\nfunction testGenerate() {\n    var router = new fos.Router({base_url: ''}, {\n        literal: {\n            tokens: [['text', '/homepage']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/homepage', router.generate('literal'));\n}\n\nfunction testGenerateWithParams() {\n    var router = new fos.Router({base_url: ''}, {\n        blog_post: {\n            tokens: [['variable', '/', '[^/]+?', 'slug'], ['text', '/blog-post']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/blog-post/foo', router.generate('blog_post', {slug: 'foo'}));\n}\n\nfunction testGenerateUsesBaseUrl() {\n    var router = new fos.Router({base_url: '/foo'}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateUsesSchemeRequirements() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {\"_scheme\": \"https\"},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('https://localhost/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateUsesHost() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: [['text', 'otherhost']]\n        }\n    });\n\n    assertEquals('http://otherhost/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateUsesHostWhenTheSameSchemeRequirementGiven() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {\"_scheme\": \"http\"},\n            hosttokens: [['text', 'otherhost']]\n        }\n    });\n\n    assertEquals('http://otherhost/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateUsesHostWhenAnotherSchemeRequirementGiven() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {\"_scheme\": \"https\"},\n            hosttokens: [['text', 'otherhost']]\n        }\n    });\n\n    assertEquals('https://otherhost/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateSupportsHostPlaceholders() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: [\n                ['text', '.localhost'],\n                ['variable', '', '', 'subdomain']\n            ]\n        }\n    });\n\n    assertEquals('http://api.localhost/foo/bar', router.generate('homepage', {subdomain: 'api'}));\n}\n\nfunction testGenerateSupportsHostPlaceholdersDefaults() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {subdomain: 'api'},\n            requirements: {},\n            hosttokens: [\n                ['text', '.localhost'],\n                ['variable', '', '', 'subdomain']\n            ]\n        }\n    });\n\n    assertEquals('http://api.localhost/foo/bar', router.generate('homepage'));\n}\n\nfunction testGenerateGeneratesRelativePathWhenTheSameHostGiven() {\n    var router = new fos.Router({base_url: '/foo', host: \"api.localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: [\n                ['text', '.localhost'],\n                ['variable', '', '', 'subdomain']\n            ]\n        }\n    });\n\n    assertEquals('/foo/bar', router.generate('homepage', {subdomain: 'api'}));\n}\n\nfunction testGenerateUsesAbsoluteUrl() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('http://localhost/foo/bar', router.generate('homepage', [], true));\n}\n\nfunction testGenerateUsesAbsoluteUrlWhenSchemeRequirementGiven() {\n    var router = new fos.Router({base_url: '/foo', host: \"localhost\", scheme: \"http\"}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {\"_scheme\": \"http\"},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('http://localhost/foo/bar', router.generate('homepage', [], true));\n}\n\nfunction testGenerateWithOptionalTrailingParam() {\n    var router = new fos.Router({base_url: ''}, {\n        posts: {\n            tokens: [['variable', '.', '', '_format'], ['text', '/posts']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/posts', router.generate('posts'));\n    assertEquals('/posts.json', router.generate('posts', {'_format': 'json'}));\n}\n\nfunction testGenerateQueryStringWithoutDefaults() {\n    var router = new fos.Router({base_url: ''}, {\n        posts: {\n            tokens: [['variable', '/', '[1-9]+[0-9]*', 'page'], ['text', '/blog-posts']],\n            defaults: {'page' : 1},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/blog-posts?extra=1', router.generate('posts', {page: 1, extra: 1}));\n}\n\nfunction testAllowSlashes() {\n    var router = new fos.Router({base_url: ''}, {\n        posts: {\n            tokens: [['variable', '/', '.+', 'id'], ['text', '/blog-post']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/blog-post/foo/bar', router.generate('posts', {id: 'foo/bar'}));\n}\n\nfunction testGenerateWithExtraParams() {\n    var router = new fos.Router(undefined, {\n        foo: {\n            tokens: [['variable', '/', '', 'bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/baz?foo=bar', router.generate('foo', {\n        bar: 'baz',\n        foo: 'bar'\n    }));\n}\n\nfunction testGenerateWithExtraParamsDeep() {\n    var router = new fos.Router(undefined, {\n        foo: {\n            tokens: [['variable', '/', '', 'bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/baz?foo%5B%5D=1&foo%5B1%5D%5B%5D=1&foo%5B1%5D%5B%5D=2&foo%5B1%5D%5B%5D=3&foo%5B1%5D%5B%5D=foo&foo%5B%5D=3&foo%5B%5D=4&foo%5B%5D=bar&foo%5B5%5D%5B%5D=1&foo%5B5%5D%5B%5D=2&foo%5B5%5D%5B%5D=3&foo%5B5%5D%5B%5D=baz&baz%5Bfoo%5D=bar+foo&baz%5Bbar%5D=baz&bob=cat', router.generate('foo', {\n        bar: 'baz', // valid param, not included in the query string\n        foo: [1, [1, 2, 3, 'foo'], 3, 4, 'bar', [1, 2, 3, 'baz']],\n        baz: {\n            foo : 'bar foo',\n            bar : 'baz'\n        },\n        bob: 'cat'\n    }));\n}\n\nfunction testGenerateThrowsErrorWhenRequiredParameterWasNotGiven() {\n    var router = new fos.Router({base_url: ''}, {\n        foo: {\n            tokens: [['text', '/moo'], ['variable', '/', '', 'bar']],\n            defaults: {},\n            requirements: {}\n        }\n    });\n\n    try {\n        router.generate('foo');\n        fail('generate() was expected to throw an error, but has not.');\n    } catch (e) {\n        assertEquals('The route \"foo\" requires the parameter \"bar\".', e.message);\n    }\n}\n\nfunction testGenerateThrowsErrorForNonExistentRoute() {\n    var router = new fos.Router({base_url: ''}, {});\n\n    try {\n        router.generate('foo');\n        fail('generate() was expected to throw an error, but has not.');\n    } catch (e) { }\n}\n\nfunction testGetBaseUrl() {\n    var router = new fos.Router({base_url: '/foo'}, {\n        homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {}\n        }\n    });\n\n    assertEquals('/foo', router.getBaseUrl());\n}\n\nfunction testGeti18n() {\n    var router = new fos.Router({base_url: '/foo', prefix: 'en__RG__'}, {\n        en__RG__homepage: {\n            tokens: [['text', '/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        },\n        es__RG__homepage: {\n            tokens: [['text', '/es/bar']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        },\n        _admin: {\n            tokens: [['text', '/admin']],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/foo/bar', router.generate('homepage'));\n    assertEquals('/foo/admin', router.generate('_admin'));\n\n    router.setPrefix('es__RG__');\n    assertEquals('/foo/es/bar', router.generate('homepage'));\n}\n\nfunction testGetRoute() {\n    var router = new fos.Router({base_url: ''}, {\n        blog_post: {\n            tokens: [['variable', '/', '[^/]+?', 'slug'], ['text', '/blog-post']],\n            defaults: {},\n            requirements: {\"_scheme\": \"http\"}\n        }\n    });\n\n    var expected = {\n        'defaults': {},\n        'tokens' : [\n            ['variable', '/', '[^/]+?', 'slug'],\n            ['text', '/blog-post']\n        ],\n        'requirements': {\"_scheme\": \"http\"}\n    };\n\n    assertObjectEquals(expected, router.getRoute('blog_post'));\n}\n\nfunction testGetRoutes() {\n    var router = new fos.Router({base_url: ''}, {\n        blog_post: 'test',\n        blog: 'test'\n    });\n\n    var expected = new goog.structs.Map({\n        blog_post: 'test',\n        blog: 'test'\n    });\n\n    assertObjectEquals(expected, router.getRoutes());\n}\n\nfunction testGenerateWithNullValue() {\n    var router = new fos.Router({base_url: ''}, {\n        posts: {\n            tokens: [\n                ['variable', '/', '.+', 'id'],\n                ['variable', '/', '.+', 'page'],\n                ['text', '/blog-post']\n            ],\n            defaults: {},\n            requirements: {},\n            hosttokens: []\n        }\n    });\n\n    assertEquals('/blog-post//10', router.generate('posts', { page: null, id: 10 }));\n}\n"]}